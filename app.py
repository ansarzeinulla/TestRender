import os
from datetime import datetime
from flask import Flask
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    MessageHandler,
    filters,
    CommandHandler,
)
import threading

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID", "0"))

# --- Flask app –¥–ª—è Render healthcheck ---
flask_app = Flask(__name__)

@flask_app.route("/healthz")
def health():
    return "OK", 200

# --- Telegram –±–æ—Ç ---
message_count = 0
lock = threading.Lock()  # –∑–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω. –Ø —Å—á–∏—Ç–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è üßÆ")

async def count(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global message_count
    with lock:
        message_count += 1

async def report(context: ContextTypes.DEFAULT_TYPE):
    global message_count
    with lock:
        count = message_count
        message_count = 0
    date = datetime.now().strftime("%Y-%m-%d")
    await context.bot.send_message(
        chat_id=CHAT_ID,
        text=f"üìä {date}: –ø–æ–ª—É—á–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –¥–µ–Ω—å.",
    )

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---
async def main():
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, count))

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Ç—á—ë—Ç–æ–≤ ‚Äî –∫–∞–∂–¥—ã–µ —Å—É—Ç–∫–∏ –≤ 21:00 (–ø–æ UTC)
    application.job_queue.run_daily(report, time=datetime.utcnow().replace(hour=21, minute=0, second=0))

    await application.run_polling()

# --- –ó–∞–ø—É—Å–∫ Flask –∏ Telegram –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ ---
if __name__ == "__main__":
    import asyncio
    import threading

    telegram_thread = threading.Thread(target=lambda: asyncio.run(main()))
    telegram_thread.start()

    flask_app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
